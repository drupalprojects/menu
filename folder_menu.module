<?php
/**
 * @file
 * This module is flash dynamic menu module for Drupal 6.
 *
 * Written by Webdorado team.
 */

/**
 * Implements hook_help().
 */
function folder_menu_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#folder_menu":
      $output = '<p>' . t("Download 'jscolor' library from <a href='http://jscolor.com/release/jscolor-1.4.0.zip'>http://jscolor.com/release/jscolor-1.4.0.zip</a> and extract it to sites/all/libraries/jscolor directory.<br />
      Download 'AC_FL_RunContent' from <a href='http://allencrosticrealty.com/AC-RunActiveContent.js/at_download/file'>http://allencrosticrealty.com/AC-RunActiveContent.js/at_download/file</a> library and copy AC_RunActiveContent.js file to sites/all/libraries/AC_FL_RunContent directory.<br />
      You can change Folder Menu settings on <strong>Administer > Site configuration > Folder Menu settings ('admin/settings/folder_menu')</strong>.<br />
      Then you must select Folder Menu block Region on <strong>Administer > Site configuration > Blocks menu ('admin/build/block')</strong>.<br /><br />
      To show more than three menus and five submenus, go to Folder Menu module page on <a href='drupal.org'>Drupal.org</a>.") . '</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_perm().
 */
function folder_menu_perm() {
  return array('access folder_menu administration');
}

/**
 * Implements hook_menu().
 */
function folder_menu_menu() {
  $items = array();

  $items['admin/settings/folder_menu'] = array(
    'title' => 'Folder Menu settings',
    'description' => 'Description of your folder_menu settings page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('folder_menu_admin'),
    'access arguments' => array('access folder_menu administration'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['folder_menu/menu_xml'] = array(
    'page callback' => 'folder_menu_create_menu_xml',
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Menu callback. Load a Folder Menu settings.
 */
function folder_menu_admin() {
  $path = 'sites/all/libraries/jscolor';
  drupal_add_js($path . '/jscolor.js');
  $form = array();
  if (!file_exists("sites/all/libraries/AC_FL_RunContent/AC_RunActiveContent.js") || !file_exists("sites/all/libraries/jscolor/jscolor.js")) {
    drupal_set_message(t("Download 'jscolor' library from <a href='http://jscolor.com/release/jscolor-1.4.0.zip'>http://jscolor.com/release/jscolor-1.4.0.zip</a> and extract it to sites/all/libraries/jscolor directory.<br />
      Download 'AC_FL_RunContent' from <a href='http://allencrosticrealty.com/AC-RunActiveContent.js/at_download/file'>http://allencrosticrealty.com/AC-RunActiveContent.js/at_download/file</a> library and copy AC_RunActiveContent.js file to sites/all/libraries/AC_FL_RunContent directory.<br />"), 'error');
  }

  $menus = menu_get_menus();
  unset($menus['navigation']);

  $form['folder_menu_parent'] = array(
    '#type' => 'select',
    '#title' => t('Menu Parent'),
    '#description' => t('The menu parent from which to show a Folder menu.'),
    '#default_value' => variable_get('folder_menu_parent', 'primary-links'),
    '#options' => $menus,
  );

  $menu_type = variable_get('folder_menu_parent', 'primary-links');
  $menus_trial = menu_tree_all_data($menu_type);

  $menu_count = 0;
  $submenu_count = 0;
  foreach ($menus_trial as $menu) {
    if ($menu['link']['hidden'] == 0) {
      $menu_count++;
    }
    if ($menu['below']) {
      foreach ($menu['below'] as $submenu) {
        if ($submenu['link']['hidden'] == 0) {
          $submenu_count++;
        }
      }
    }
  }
  if ($menu_count > 3) {
    drupal_set_message(t('To show more than three menus, go to Folder Menu module page on <a href="http://drupal.org">Drupal.org</a>.'), 'warning', FALSE);
  }
  if ($submenu_count > 5) {
    drupal_set_message(t('To show more than five submenus, go to Folder Menu module page on <a href="http://drupal.org">Drupal.org</a>.'), 'warning', FALSE);
  }

  $form['folder_menu_position'] = array(
    '#type' => 'select',
    '#title' => t('Menu Position'),
    '#description' => t('Position can be absolute or fixed'),
    '#default_value' => variable_get('folder_menu_position', 'fixed'),
    '#options' => array('fixed' => t('Fixed'), 'absolute' => t('Absolute')),
  );

  $form['folder_menu_distance_from_top'] = array(
    '#type' => 'textfield',
    '#title' => t('Distance from top'),
    '#default_value' => variable_get('folder_menu_distance_from_top', '0'),
    '#size' => 21,
    '#description' => t('Distance from top of the page. (px)'),
  );

  $options_font = array(
    'Verdana' => 'Verdana',
    'Lucida' => 'Lucida',
    'Georgia' => 'Georgia');

  $form['folder_menu_font'] = array(
    '#type' => 'select',
    '#title' => t('Menu Font'),
    '#options' => $options_font,
    '#default_value' => variable_get('folder_menu_font', 'Georgia'),
  );

  $form['folder_menu_background_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Menu Background Color'),
    '#default_value' => variable_get('folder_menu_background_color', 'F2F2F2'),
    '#attributes' => array('class' => 'color'),
    '#size' => 21,
  );

  $form['folder_menu_text_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Menu Text Color'),
    '#default_value' => variable_get('folder_menu_text_color', '525A66'),
    '#attributes' => array('class' => 'color'),
    '#size' => 21,
  );

  $form['folder_menu_hover_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Menu Hover Color'),
    '#default_value' => variable_get('folder_menu_hover_color', '7FBFFF'),
    '#attributes' => array('class' => 'color'),
    '#size' => 21,
  );

  $form['folder_menu_submenu_text_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Submenu Text Color'),
    '#default_value' => variable_get('folder_menu_submenu_text_color', '525A66'),
    '#attributes' => array('class' => 'color'),
    '#size' => 21,
  );

  $form['folder_menu_submenu_hover_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Submenu Hover Color'),
    '#default_value' => variable_get('folder_menu_submenu_hover_color', '7FBFFF'),
    '#attributes' => array('class' => 'color'),
    '#size' => 21,
  );

  if (!is_numeric(variable_get('folder_menu_distance_from_top', '0'))) {
    drupal_get_messages('status');
    drupal_get_messages('error');
    drupal_set_message(t('Distance from top must be numeric.'), 'error');
  }
  else {
    drupal_get_messages('error');
  }

  return system_settings_form($form);
}

/**
 * Implements hook_block().
 */
function folder_menu_block($op = 'list', $delta = 0) {
  if ($op == "list") {
    $block = array();
    $block[0]["info"] = 'Folder Menu';
    $block[0]["content"] = '';
    return $block;
  }
  elseif ($op == 'view') {
    switch ($delta) {
      case 0:
        $block_content = '';
        $block['subject'] = '';
        $block['content'] = folder_menu_createFlashDiv();
        break;
    }
    return $block;
  }
}

/**
 * Function folder_menu_createFlashDiv().
 */
function folder_menu_createFlashDiv() {
  $head_search = @get_headers($GLOBALS['base_url'] . 'folder_menu/menu_xml');
  if (strpos($head_search[0], '404 Not Found') || strpos($head_search[0], '500 Internal Server Error')) {
    $menuxmlurl = '?q=folder_menu/menu_xml';
  }
  else {
    $menuxmlurl = 'folder_menu/menu_xml';
  }
  switch (variable_get('folder_menu_font', 'Georgia')) {
    case 'Georgia':
      $swfurl = drupal_get_path('module', 'folder_menu') . '/VerticalGeorgia';
      break;

    case 'Lucida':
      $swfurl = drupal_get_path('module', 'folder_menu') . '/VerticalLucida';
      break;

    case 'Verdana':
      $swfurl = drupal_get_path('module', 'folder_menu') . '/VerticalVerdana';
      break;
  }

  $path = 'sites/all/libraries/AC_FL_RunContent';
  drupal_add_js($path . '/AC_RunActiveContent.js');
  drupal_add_js(drupal_get_path('module', 'folder_menu') . '/js/folder_menu_functions.js');
  drupal_add_js(drupal_get_path('module', 'folder_menu') . '/js/folder_menu_createFlashdiv.js');
  drupal_add_js(array('folder_menu' => array('swf_url' => $swfurl, 'menu_xml_url' => $menuxmlurl)), 'setting');
  drupal_add_js('folder_menu_createFlash();', 'inline', 'footer');
  return '<div id="foldermenuverticalContainer"
              onmouseover="folder_menu_onmouseover_vertical();"
              onmouseout="folder_menu_onmouseout_vertical();"
              style=" left:0px;
                      top:' . check_plain(variable_get('folder_menu_distance_from_top', '0')) . 'px;
                      overflow:hidden;
                      width:50px;
                      height:1500px;
                      z-index:10000;
                      position:' . variable_get('folder_menu_position', 'fixed') . '
                      ">
          </div>';
}

/**
 * This function generate xml.
 */
function folder_menu_create_menu_xml() {
  header("Content-Type:text/xml");
  echo '<?xml version="1.0" encoding="UTF-8"?>
    <dropdown>
    <settings
    menuColor = "0x' . variable_get('folder_menu_background_color', 'F2F2F2') . '"
    menuFontColor = "0x' . variable_get('folder_menu_text_color', '525A66') . '"
    menuFontGlowColor = "0x' . variable_get('folder_menu_hover_color', '7FBFFF') . '"
    subMenuFontColor = "0x' . variable_get('folder_menu_submenu_text_color', '525A66') . '"
    subMenuFontGlowColor = "0x' . variable_get('folder_menu_submenu_hover_color', '7FBFFF') . '"
    >
    </settings>';
  $menu_type = variable_get('folder_menu_parent', 'primary-links');
  $menus = menu_tree_all_data($menu_type);

  foreach ($menus as $menu) {
    $menulink = $menu['link'];
    if ($menulink['hidden'] == 0) {
      if (strstr($menulink['link_path'], 'http')) {
        echo '<menu cap="' . check_plain($menulink['title']) . '" url = "' . check_url($menulink['link_path']) . '" window = "_self">';
      }
      else {
        echo '<menu cap="' . check_plain($menulink['title']) . '" url = "?q=' . check_url($menulink['link_path']) . '" window = "_self">';
      }

      $submenus = $menu['below'];
      if ($submenus != FALSE) {
        foreach ($submenus as $submenu) {
          $submenulink = $submenu['link'];
          if ($submenulink['hidden'] == 0) {
            if (strstr($submenulink['link_path'], 'http')) {
              echo '<submenu cap="' . check_plain($submenulink['title']) . '" url = "' . check_url($submenulink['link_path']) . '" window = "_self"></submenu>';
            }
            else {
              echo '<submenu cap="' . check_plain($submenulink['title']) . '" url = "?q=' . check_url($submenulink['link_path']) . '" window = "_self"></submenu>';
            }
          }
        }
      }
      echo '</menu>';
    }
  }
  echo '</dropdown>';
}
